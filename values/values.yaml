qmspec:

  license:
    accept: true

  imagePullSecrets: 
    - name: image-pull-secret

  pki:
    tlsSecretName: qm-tls
    enableTls: 1

  ldapCredsSecret:
    name: ldapcreds
    passwordkey: password # optional, default is "password"

  vault:
    ldapCreds:
      enable: 'true'
      injectpath: '/vault/secrets/mq-ldapcreds.txt'

  annotations:
    vault.hashicorp.com/agent-inject: 'true'
    vault.hashicorp.com/role: 'mq-ldapcreds'
    vault.hashicorp.com/agent-inject-secret-mq-ldapcreds.txt: 'secret/data/mq/ldapcreds'
    vault.hashicorp.com/agent-inject-template-mq-ldapcreds.txt: |          
      {{- with secret "secret/data/mq/ldapcreds" -}}
      {{ .Data.data.password }}
      {{- end -}}

  qmconf:
    name: qm20
    image: docker.io/simong5000/txmq-mq-base-rpm-9.2.2.0:102
    imagePoolPolicy: Always

    env:
    - name: MQ_START_MQWEB
      value: "1"

#    resources:
#      limits:
#        cpu: '1'
#        memory: 1Gi
#      requests:
#        cpu: '1'
#        memory: 1Gi

    storage:
      pvcName: qm-sts-claim
      storageClass: standard
      accessMode: ReadWriteOnce
      deleteClaim: false
      size: 2Gi

webuser:
  webroles:
  - name: MQWebAdmin
    groups: [devs]
  - name: MQWebAdminRO
    groups: [devs]
  - name: MQWebUser
    groups: [devs]

  apiroles:
  - name: MQWebAdmin
    groups: [devs]
  - name: MQWebAdminRO
    groups: [devs]
  - name: MQWebUser
    groups: ["devs"]

  ldapregistry:
    connect:
      realm: openldap
      host: openldap.default.svc.cluster.local
      port: 389
      ldaptype: Custom
      binddn: cn=admin,dc=szesto,dc=com
      bindpassword: ""
      basedn: dc=szesto,dc=com
      sslenabled: false

    groupdef:
      objectclass: groupOfNames
      groupnameattr: cn
      groupmembershipattr: member

    userdef:
      objectclass: inetOrgPerson
      usernameattr: uid

  allowedhosts: []

  clientauth:
    keystorepass: ""
    truststorepass: ""
    enabled: false
