qmenv=$1

if [[ -z $qmenv ]]; then
echo qm environment file required: ./mqscic-template.sh 'envfile'
exit 1
fi

# load environment
. $qmenv

out=output/etc/mqm/mqsc

cat <<EOF > $out/mqapp.mqsc
* define channel
DEFINE CHANNEL(APP.MYAPP.CHANNEL) CHLTYPE(SVRCONN) SSLCIPH(ANY_TLS13) SSLCAUTH(OPTIONAL) REPLACE

* define channel rules
SET CHLAUTH(APP.MYAPP.CHANNEL) TYPE(ADDRESSMAP) USERSRC(CHANNEL) ADDRESS(*) ACTION(REPLACE)

* grant connect to qmgr
SET AUTHREC OBJTYPE(QMGR) GROUP(${APPL_GROUP}) AUTHADD(CONNECT, INQ, DSP)
SET AUTHREC OBJTYPE(QMGR) GROUP(${ADMIN_GROUP}) AUTHADD(CONNECT, INQ, DSP)

* create queues
DEFINE QLOCAL(APP.MYAPP.QA) USAGE(NORMAL) PUT(ENABLED) GET(ENABLED) DEFPSIST(YES) REPLACE
DEFINE QLOCAL(APP.MYAPP.QB) USAGE(NORMAL) PUT(ENABLED) GET(ENABLED) DEFPSIST(YES) REPLACE

* application role
SET AUTHREC PROFILE('APP.MYAPP.QA') OBJTYPE(QUEUE) GROUP(${APPL_GROUP}) AUTHADD(PUT, GET, INQ, DSP)
SET AUTHREC PROFILE('APP.MYAPP.QB') OBJTYPE(QUEUE) GROUP(${APPL_GROUP}) AUTHADD(PUT, GET, INQ, DSP)

* application admin role
SET AUTHREC PROFILE('APP.MYAPP.**') OBJTYPE(QUEUE) GROUP(${ADMIN_GROUP}) AUTHADD(ALLADM,ALLMQI,CRT)
SET AUTHREC PROFILE('APP.MYAPP.**') OBJTYPE(TOPIC) GROUP(${ADMIN_GROUP}) AUTHADD(ALLADM,ALLMQI,CRT)
SET AUTHREC PROFILE('APP.MYAPP.**') OBJTYPE(CHANNEL) GROUP(${ADMIN_GROUP}) AUTHADD(ALLADM,ALLMQI,CRT)
EOF
