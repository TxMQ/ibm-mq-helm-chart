qmspec:
  labels: {} # podTemplateSpec

  annotations: {} # podTemplateSpec

  # base, advanced, custom
  capabilities: mqbase

  # if capabilities is set to "custom"
  # define license annotations
  licenseAnnotations: {}

  affinity: # podSpec
    nodeAffinity: {}
    podAffinity: {}
    podAntiAffinity: {}

  serviceAccount:
    create: true
    name: mqdeployer

  imagePullSecrets: # podSpec
    - name: ""

  license:
    accept: false

  pki:
    tlsSecretName: ""
    enableTls: 0

  ldapCredsSecret: {}

  terminationGracePeriodSeconds: 10

  qmconf:
    name: ""
    image: ""
    imagePoolPolicy: IfNotPresent # container

    resources: {} # container

    debug: false # env

    logFormat: {} # env

    metrics: true # prometeus metrics env

    storage:
      pvcName: qm-sts-claim
      storageClass: standard
      accessMode: ReadWriteOnce
      deleteClaim: false
      size: 2Gi

webuser:
  webroles:
  - name: MQWebAdmin
    groups: []
  - name: MQWebAdminRO
    groups: []
  - name: MQWebUser
    groups: []

  apiroles:
  - name: MQWebAdmin
    groups: []
  - name: MQWebAdminRO
    groups: []
  - name: MQWebUser
    groups: []

  ldapregistry:
    connect:
      realm: ""
      host: ""
      port: 389
      ldaptype: Custom
      binddn: ""
      bindpassword: ""
      basedn: ""
      sslenabled: false

    groupdef:
      objectclass: groupOfNames
      groupnameattr: cn
      groupmembershipattr: member

    userdef:
      objectclass: inetOrgPerson
      usernameattr: uid

  allowedhosts: []

  clientauth:
    keystorepass: ""
    truststorepass: ""
    enabled: false

  variables:
  - name: httpsPort
    value: "9443"
  - name: httpHost
    value: '*'
  - name: mqRestCorsAllowedOrigints
    value: '*'
